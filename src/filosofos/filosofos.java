/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package filosofos;

import java.util.LinkedList;
import java.util.Queue;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author vdgp_
 */
public class filosofos extends javax.swing.JFrame {

    /**
     * Creates new form filosofos
     */
    Queue<Integer> tenedor1=new LinkedList();
    Queue<Integer> tenedor2=new LinkedList();
    Queue<Integer> tenedor3=new LinkedList();
    Queue<Integer> tenedor4=new LinkedList();
    Queue<Integer> tenedor5=new LinkedList();
    filosofo f1 = new filosofo(1,5,1);
    filosofo f2 = new filosofo(2,1,2);
    filosofo f3 = new filosofo(3,2,3);
    filosofo f4 = new filosofo(4,3,4);
    filosofo f5 = new filosofo(5,4,5);
    int terminar = 0;
    public filosofos() {
        initComponents();
        f1.start();
        f2.start();
        f3.start();
        f4.start();
        f5.start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Mesa = new javax.swing.JLabel();
        filosofo1 = new javax.swing.JLabel();
        filosofo2 = new javax.swing.JLabel();
        filosofo3 = new javax.swing.JLabel();
        filosofo4 = new javax.swing.JLabel();
        filosofo5 = new javax.swing.JLabel();
        InfoFilosofo1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        InfoFilosofo2 = new javax.swing.JLabel();
        InfoFilosofo3 = new javax.swing.JLabel();
        InfoFilosofo4 = new javax.swing.JLabel();
        InfoFilosofo5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        Mesa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Mesa.jpg"))); // NOI18N

        filosofo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/PersonaGris.png"))); // NOI18N

        filosofo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/PersonaGris.png"))); // NOI18N

        filosofo3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/PersonaGris.png"))); // NOI18N

        filosofo4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/PersonaGris.png"))); // NOI18N

        filosofo5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/PersonaGris.png"))); // NOI18N

        InfoFilosofo1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        InfoFilosofo1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Filosofo 1:");

        InfoFilosofo2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        InfoFilosofo2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        InfoFilosofo3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        InfoFilosofo3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        InfoFilosofo4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        InfoFilosofo4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        InfoFilosofo5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        InfoFilosofo5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Filosofo 2:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Filosofo 3:");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Filosofo 4:");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Filosofo 5:");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("1");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("2");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("3");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("4");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("5");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel11.setText("Gris: Pensando");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel12.setText("Naranja: Esperando");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel13.setText("Verde: Comiendo");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(387, 387, 387)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(InfoFilosofo2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InfoFilosofo1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InfoFilosofo3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InfoFilosofo4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InfoFilosofo5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(filosofo5)
                        .addGap(56, 56, 56))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(filosofo1)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Mesa, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(filosofo3)
                                .addGap(43, 43, 43)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(320, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addGap(149, 149, 149))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addComponent(filosofo4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)))))
                            .addComponent(jLabel11))
                        .addGap(27, 27, 27))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(filosofo2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(149, 149, 149))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(149, 149, 149))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(149, 149, 149))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(InfoFilosofo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(filosofo2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(InfoFilosofo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(InfoFilosofo3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(InfoFilosofo4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(211, 211, 211)
                                .addComponent(jLabel8))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Mesa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(filosofo3, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(InfoFilosofo5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(filosofo4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(194, 194, 194)
                                        .addComponent(jLabel9))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(jLabel11)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel12)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel13)))
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(filosofo1)
                        .addGap(148, 148, 148)
                        .addComponent(filosofo5)
                        .addGap(162, 162, 162))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(240, 240, 240))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(filosofos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(filosofos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(filosofos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(filosofos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new filosofos().setVisible(true);
                
            }
        });
        
    }
    public void run() throws InterruptedException{
        while(true){
           
            Thread.sleep(1500);
           if(terminar == 5){
               Thread.sleep(2000);
                System.exit(1);
            }
         }
    }
    class filosofo extends Thread{
        int id;
        int izq;
        int der;
        int comida = 0;
        filosofo(int id_,int izq_, int der_){
            id = id_;
            izq = izq_;
            der = der_;
        }
        @Override
        public void run(){
                while(comida < 5){
                    tiempoEspera(3,3);
                    if (tomarTenedorIzquierdo()){ //si se logro tomar el tenedor izquierdo
                        if(tomarTenedorDerecho()){//si se logro tomar el tenedor derecho
                            comer();
                        }else{
                            soltarTenedorIzquierdo();
                            pintarPersona("Gris");
                        }
                    }
                    tiempoEspera(3,1);
                }
                terminar++;
            if (terminar== 5){
                System.exit(1);
            }
        }
        
        public boolean tomarTenedorIzquierdo(){
          
                switch(izq){
                    case 1:
                        if(tenedor1.size()==0){
                            tenedor1.add(id);//ingresar en la cola
                                pintarPersona("Naranja");
                            return true;
                        }
                        break;
                    case 2:
                        if(tenedor2.size()==0){
                            tenedor2.add(id);//ingresar en la cola
                            pintarPersona("Naranja");
                            return true;
                        }
                        break;
                    case 3:
                        if(tenedor3.size()==0){
                            tenedor3.add(id);//ingresar en la cola
                            pintarPersona("Naranja");
                            return true;
                        }
                        break;
                    case 4:
                        if(tenedor4.size()==0){
                            tenedor4.add(id);//ingresar en la cola
                            pintarPersona("Naranja");
                            return true;
                        }
                        break;
                    case 5:
                        if(tenedor5.size()==0){
                            tenedor5.add(id);//ingresar en la cola
                            pintarPersona("Naranja");
                            return true;
                        }
                        break;
                }
                return false;
            }
        public boolean tomarTenedorDerecho(){
            switch(der){
                    case 1:
                        if(tenedor1.size()==0){
                            tenedor1.add(id);
                            return true;
                        }else{
                            tiempoEspera(3,3);
                            if(tenedor1.size()==0){
                                tenedor1.add(id);
                                return true;
                            }
                        }
                        break;
                    case 2:
                        if(tenedor2.size()==0){
                            tenedor2.add(id);
                            return true;
                        }else{
                            tiempoEspera(3,3);
                            if(tenedor2.size()==0){
                                tenedor2.add(id);
                                return true;
                            }
                        }
                        break;
                    case 3:
                        if(tenedor3.size()==0){
                            tenedor3.add(id);
                            return true;
                        }else{
                            tiempoEspera(3,3);
                            if(tenedor3.size()==0){
                                tenedor3.add(id);
                                return true;
                            }
                        }
                        break;
                    case 4:
                        if(tenedor4.size()==0){
                            tenedor4.add(id);
                            return true;
                        }else{
                            tiempoEspera(3,3);
                            if(tenedor4.size()==0){
                                tenedor4.add(id);
                                return true;
                            }
                        }
                        break;
                    case 5:
                        if(tenedor5.size()==0){
                            tenedor5.add(id);
                            return true;
                        }else{
                            tiempoEspera(3,3);
                            if(tenedor5.size()==0){
                                tenedor5.add(id);
                                return true;
                            }
                        }
                        break;
                }
            return false;
        }
        public void comer(){
            pintarPersona("Verde");
            tiempoEspera(4,2);
            comida ++;
            switch(id){//liberar los tenedores utilizados
                case 1:
                    tenedor5.poll();
                    tenedor1.poll();
                    InfoFilosofo1.setText(Integer.toString(comida));
                    break;
                case 2: 
                    tenedor1.poll();
                    tenedor2.poll();
                    InfoFilosofo2.setText(Integer.toString(comida));
                    break;
                case 3: 
                    tenedor2.poll();
                    tenedor3.poll();
                    InfoFilosofo3.setText(Integer.toString(comida));
                    break;
                case 4: 
                    tenedor3.poll();
                    tenedor4.poll();
                    InfoFilosofo4.setText(Integer.toString(comida));
                    break;
                case 5: 
                    tenedor4.poll();
                    tenedor5.poll();
                    InfoFilosofo5.setText(Integer.toString(comida));
                    break;
            }
            pintarPersona("Gris");
        }
        void soltarTenedorIzquierdo(){
            switch(id){
                case 1: tenedor5.poll();
                    break;
                case 2: tenedor1.poll();
                    break;
                case 3: tenedor2.poll();
                    break;
                case 4: tenedor3.poll();
                    break;
                case 5: tenedor4.poll();
                    break;
            }
        }
        public void pintarPersona(String color){
            Icon icono;
            icono = new ImageIcon(getClass().getResource("/Imagenes/Persona"+color+".png"));
            switch(id){
                case 1: filosofo1.setIcon(icono);
                        break;
                case 2: filosofo2.setIcon(icono);
                        break;
                case 3: filosofo3.setIcon(icono);
                        break;
                case 4: filosofo4.setIcon(icono);
                        break;
                case 5: filosofo5.setIcon(icono);
                        break;
            }
        }
          void tiempoEspera(int valor1,int valor2){
        int tiempo=  (int) (Math.random()*valor1 + valor2) ;
        for (int i = tiempo; i >= 0; i--) {
            try {
                Thread.sleep(1000);
                
            } catch (InterruptedException ex) {
                Logger.getLogger(filosofos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel InfoFilosofo1;
    private javax.swing.JLabel InfoFilosofo2;
    private javax.swing.JLabel InfoFilosofo3;
    private javax.swing.JLabel InfoFilosofo4;
    private javax.swing.JLabel InfoFilosofo5;
    private javax.swing.JLabel Mesa;
    private javax.swing.JLabel filosofo1;
    private javax.swing.JLabel filosofo2;
    private javax.swing.JLabel filosofo3;
    private javax.swing.JLabel filosofo4;
    private javax.swing.JLabel filosofo5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
